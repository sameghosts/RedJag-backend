make index

mkdir: directives, resolves, typeDefs

directives 
  Authdirective

resolvers 
  index
    greeting -  for server spoof
    user - 
    search - 
    jobs -
    todo - 
    journal - 
    reminders -

typeDefs 
  index
    #### MVP requirements: 
    greeting -  for server spoof
    user - Created, Stubbed, 
    jobs - Created, Stubbed,
      job object 
      JobCollections
    journal - Created, Stubbed
    
    #### next steps: 

    todo - 
    reminders -


user typeDef 
user = gql`
#user type base def 
  type User {
    id: ID!
    email: String!
    username: String!
    first_name: String!
    last_name: String!
  }
#user queries
#user mutations

`
##Todo 
- [] Add Mutations 
- [] Go Through Q n M for MVP Scope
- [] Move over Mutations
- [] Move over psuedo
- [] push resolver functionality for 3 models




______________________________________
======================================
--------------------------------------
======================================
______________________________________
Project Big Query and Mutations Chart

===== USER 
Queries: {
LoginUser
UserInfoAuth
getLiuProfile
getPubProfile
getLiuLoc
getLiuIdentity
getSkillset [part of query param type - hard soft stack]
}


Mutations: {
  RegisterUser - Registers the user / Read 2 User
  UpdateProfile - Update profile
  UpdateLoc - update location
  AddSkill - adds a skill see below about input and write
  update skill - make skill input object, comes with extra parameter for if hard soft or stack
  createJournalonUser
  CreateCollectionOnUser
  }


===== JOURNAL 
Queries: {
  AllEntries
  EntryAtId
  EntryContactAll
  EntryContactID
  getContactRemind
  getContactNotes
  getEntryRemind
  getEntryNotes
}


Mutations: {
addJournal
addJournalEntry
updateEntry
delEntry
addNotesEntry
updateNotesEntry
addContact
addReminder
addNotesContact
updateNotesContact
updateReminder
delReminder

}

===== JOB 
Queries: {
AllFaved
FavedByParam
recentCache10
recentCache50
getAPISearch
getAllApplied
getFromAllifMatch
getDataForAnalysis
getNLPResults
getNLPAtId
}


Mutations: {
saveSearchSession
faveJob
unFaveJob
addAppliedandPushJournal
saveNLPdataSet
createNLP
saveNLPInstance
clearUpdate10Cache
clearUpdate60Cache

}